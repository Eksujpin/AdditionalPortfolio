// <auto-generated />
using System;
using BDSA2020.Assignment03.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BDSA2020.Assignment03.Migrations
{
    [DbContext(typeof(kanbanContext))]
    [Migration("20200921162653_SeedMigration")]
    partial class SeedMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BDSA2020.Assignment03.Tag", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Tag__737584F6A119F308");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Easy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hard"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Programming"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Admin work"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Setup"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cleaning"
                        });
                });

            modelBuilder.Entity("BDSA2020.Assignment03.Task", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AssignedTo");

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedTo = 1,
                            Description = "deploy global platforms",
                            State = 0,
                            Title = "Clean up code"
                        },
                        new
                        {
                            Id = 2,
                            Description = "deploy best-of-breed niches",
                            State = 0,
                            Title = "Program good stuff"
                        },
                        new
                        {
                            Id = 3,
                            Description = "disintermediate 24/365 niches",
                            State = 1,
                            Title = "Make citations"
                        },
                        new
                        {
                            Id = 4,
                            Description = "productize integrated infomediaries",
                            State = 1,
                            Title = "Cook dinner"
                        },
                        new
                        {
                            Id = 5,
                            Description = "monetize customized experiences",
                            State = 2,
                            Title = "Save the world"
                        },
                        new
                        {
                            Id = 6,
                            Description = "incubate killer web-readiness",
                            State = 2,
                            Title = "Destroy the world"
                        },
                        new
                        {
                            Id = 7,
                            AssignedTo = 2,
                            Description = "deploy visionary e-business",
                            State = 3,
                            Title = "Become famous"
                        },
                        new
                        {
                            Id = 8,
                            State = 3,
                            Title = "Delete the sun"
                        },
                        new
                        {
                            Id = 9,
                            AssignedTo = 2,
                            Description = "enable 24/7 architectures",
                            State = 4,
                            Title = "Assassinate trump"
                        },
                        new
                        {
                            Id = 10,
                            AssignedTo = 3,
                            State = 4,
                            Title = "Make america great again"
                        });
                });

            modelBuilder.Entity("BDSA2020.Assignment03.TaskTag", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Tag")
                        .HasColumnName("tag")
                        .HasColumnType("int");

                    b.Property<int>("Task")
                        .HasColumnName("task")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Tag");

                    b.HasIndex("Task");

                    b.ToTable("TaskTag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tag = 3,
                            Task = 1
                        },
                        new
                        {
                            Id = 2,
                            Tag = 4,
                            Task = 1
                        },
                        new
                        {
                            Id = 3,
                            Tag = 7,
                            Task = 1
                        },
                        new
                        {
                            Id = 4,
                            Tag = 1,
                            Task = 2
                        },
                        new
                        {
                            Id = 5,
                            Tag = 4,
                            Task = 2
                        },
                        new
                        {
                            Id = 6,
                            Tag = 1,
                            Task = 5
                        },
                        new
                        {
                            Id = 7,
                            Tag = 3,
                            Task = 9
                        },
                        new
                        {
                            Id = 8,
                            Tag = 7,
                            Task = 9
                        },
                        new
                        {
                            Id = 9,
                            Tag = 5,
                            Task = 9
                        },
                        new
                        {
                            Id = 10,
                            Tag = 1,
                            Task = 10
                        });
                });

            modelBuilder.Entity("BDSA2020.Assignment03.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ__User__A9D1053435401C23");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "tpoxson0@gnu.org",
                            Name = "Tania Poxson"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jlarraway1@huffingtonpost.com",
                            Name = "Janos Larraway"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ibyre2@dyndns.org",
                            Name = "Ingram Byre"
                        });
                });

            modelBuilder.Entity("BDSA2020.Assignment03.Task", b =>
                {
                    b.HasOne("BDSA2020.Assignment03.User", "AssignedToNavigation")
                        .WithMany("Task")
                        .HasForeignKey("AssignedTo")
                        .HasConstraintName("fk_user_tasks");
                });

            modelBuilder.Entity("BDSA2020.Assignment03.TaskTag", b =>
                {
                    b.HasOne("BDSA2020.Assignment03.Tag", "TagNavigation")
                        .WithMany("TaskTag")
                        .HasForeignKey("Tag")
                        .HasConstraintName("FK__TaskTag__tag__2E1BDC42")
                        .IsRequired();

                    b.HasOne("BDSA2020.Assignment03.Task", "TaskNavigation")
                        .WithMany("TaskTag")
                        .HasForeignKey("Task")
                        .HasConstraintName("FK__TaskTag__task__2D27B809")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
